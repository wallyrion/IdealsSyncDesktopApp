@using IdealsSyncDesktopApp.Core
@inject FileSyncService FileSyncService
@inject ExplorerService ExplorerService
@inject State State

<SyncTable Items="SyncItems" DeleteItem="DeleteItem" OnRevertVersion="RevertVersion">

</SyncTable>

@code {
    List<LocalFile> SyncItems { get; set; } = [];


    async void Changed()
    {
        SyncItems = await FetchAllFiles();
        await InvokeAsync(StateHasChanged);
    }


    private async Task<List<LocalFile>> FetchAllFiles()
    {
        return await ExplorerService.GetAllFiles();
    }

    protected override async Task OnInitializedAsync()
    {
        State.SyncStatusChanged += Changed;

        SyncItems = await FetchAllFiles();
    }

    public void Dispose()
    {
        State.SyncStatusChanged -= Changed;
    }

    private async Task DeleteItem(LocalFile file)
    {
        await FileSyncService.RemoveFileLocally(file);
    }

    private async Task RevertVersion(FileHistoryItem item)
    {
        await ExplorerService.RevertFileVersion(item);
    }

}