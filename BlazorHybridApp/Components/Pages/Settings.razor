@page "/settings"
@using BlazorHybridApp.Core
@using CommunityToolkit.Maui.Storage
@inject UserSettingsProvider UserSettingsProvider
@inject IFolderPicker FolderPicker;

<MudText Typo="Typo.h6">Account Information</MudText>
<MudTextField Label="Email" Value="@_settings.Email" ReadOnly="true" Variant="Variant.Filled" Class="mt-2 p-1"/>
<MudTextField Label="Sync Location" Value="@_settings.SyncPath" ReadOnly="true" Variant="Variant.Filled" Class="mt-2 p-1"/>
<MudButton OnClick="ChangeSyncLocation" Variant="Variant.Outlined" Color="Color.Primary" Class="mt-2 mb-3">Change Sync Location</MudButton>

<MudText Typo="Typo.h6" Class="mt-4">Settings</MudText>
<MudTextField InputType="InputType.Number" Label="Operation Delay (Milliseconds)" Variant="Variant.Filled" Class="mt-2 p-1" @bind-Value="_operationDelay" />

<MudButton OnClick="SaveSettings" Variant="Variant.Outlined" Color="Color.Primary" Class="mt-2 mb-3">Save Settings</MudButton>

@code {
    private UserSettings _settings = new();
    private string _operationDelay = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Fetch the user settings
        _settings = (await UserSettingsProvider.GetUserSettingsAsync())!;
        _operationDelay = _settings.OperationDelay.ToString(); // Assuming OperationDelay is an int
    }

    private async Task ChangeSyncLocation()
    {
        var result = await FolderPicker.PickAsync();

        if (result.Folder is null)
        {
            return;
        }

        var path = result.Folder.Path;

        await UserSettingsProvider.SelectNewSyncPathAsync(path);
        _settings = (await UserSettingsProvider.GetUserSettingsAsync())!;
    }

    private async Task SaveSettings()
    {
        if (int.TryParse(_operationDelay, out var delay))
        {
            _settings.OperationDelay = delay;
            await UserSettingsProvider.UpdateUserSettingsAsync(_settings);
        }
        else
        {
            // Handle invalid input
            Console.WriteLine("Invalid input for Operation Delay");
        }
    }
}
